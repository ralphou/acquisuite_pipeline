/*
  This function takes a point reference, 
  extracts the modhopper device and point address,
  and requests data from the acquisuite data collector.
  It should then save that data (after checking validity) into 
  the history for the point in question.
  
  Arguments: 
  point             point with a modhopperDevAddr and modhopperPointAddr
  start_date        dateTime for beginning of sliding window
  end_date          dateTime for ending of sliding window
  
  // LBNL // JS // Last Update: 2019-08-07 //
*/

(point, start_datetime, end_datetime) => do

  addr: point->modhopperDevAddr
  pt: point->modhopperPointAddr
  id: point->id

  datetime_string = toStr(start_datetime)
  date_string = split(datetime_string, "T")[0]
  time_string = split(split(datetime_string, "T")[1], "-")[0]

  link: "http://fmcs-svc-mgr.lbl.gov/get_data?address=" + toStr(addr) + "&point=" + toStr(pt) + "&start=" + date_string + "_" + time_string + "&end=" + end_datetime
  his: ioReadCsv(`` +  link) 

  list: []
  his.each reading => do
    time: parseDateTime(reading->time, pattern: "YYYY-MM-DD hh:mm:ss")
    value: reading->value
    list = add(list, {ts: time, val: value})
    end

  return list
  // write his
  // hisWrite(list, point)
end

